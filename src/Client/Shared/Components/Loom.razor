@using MasterCraft.Client.Common.Api;
@using Microsoft.Extensions.Configuration
@using MasterCraft.Client.Shared.Models;

@implements IDisposable

@inject IJSRuntime JS
@inject ApiClient ApiClient
@inject IConfiguration Configuration
@inject NavigationManager Navigation

<SfButton id="btn-record" CssClass="e-danger">Record</SfButton>

@code {
    DotNetObjectReference<Loom> ObjectReference;

    [Parameter] public Func<LoomVideo, string, Task> OnSubmitFeedbackClick { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        ApiResponse<AccessTokenVm> response = await ApiClient.GetAsync<AccessTokenVm>("loomtoken");

        ObjectReference = DotNetObjectReference.Create(this);
        await JS.InvokeVoidAsync("LoomService.init", 
            new object [] 
            { 
                response?.Response.AccessToken, 
                "btn-record", 
                ObjectReference, 
                "Submit Feedback", 
                Colors.McButtonGray, 
                Colors.McButtonDarkGray,
                Colors.McButtonDarkGray,
                Colors.McGreen,
                Colors.McDarkGreen,
                Colors.McDarkGreen
            });
    }

    [JSInvokable]
    public async Task OnInsertClick(LoomVideo video, string html)
    {
        await OnSubmitFeedbackClick(video, html);
    }

    public void Dispose()
    {
        ObjectReference?.Dispose();
    }
}


