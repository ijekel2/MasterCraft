@page "/mentor/setup"

@using MasterCraft.Client.Mentors.Components;
@inject NavigationManager Navigation;
<AuthorizeView>
    <NotAuthorized>
        <div class="mc-title">
            <h3>Set up your MasterCraft account</h3>
            <hr />
        </div>
        <div class="mc-breadcrumb">
            <div class="mc-breadcrumb-labels">
                @foreach (var crumb in cBreadcrumbs)
                {
                    string cssClass = currentForm >= crumb.Key ? "active-label" : "inactive-label";
                    <label class=@cssClass>@crumb.Value</label>
                }
            </div>
            <div class="mc-breadcrumb-icons">
                @foreach (var crumb in cBreadcrumbs)
                {
                    bool active = currentForm >= crumb.Key;

                    if (crumb.Key > 1)
                    {
                        string connectorClass = $"connector {(active ? "active" : "inactive")}";
                        <hr class="@connectorClass" />
                    }

                    string buttonClass = $"mc-breadcrumb-btn {(active ? "active-btn" : "inactive")}";
                    <SfButton CssClass=@buttonClass Disabled=@(!active) @onclick="() => OnCrumbClick(crumb.Key)">@crumb.Key</SfButton>
                }
            </div>
        </div>

        <div class="entry-form">
            @switch (currentForm)
            {
                case 1:
                    <MentorProfileInputs OnValidSubmit="GoToNextForm" />
                    break;
                case 2:
                    <OfferingInputs OnValidSubmit="GoToNextForm" />
                    break;
                case 3:
                    <MentorProfileUploads />
                    <SfProgressButton Content="Next" CssClass="mc-btn mc-btn-black" @onclick="GoToNextForm">
                        <ProgressButtonAnimationSettings Effect="Syncfusion.Blazor.SplitButtons.AnimationEffect.ZoomIn"></ProgressButtonAnimationSettings>
                        <ProgressButtonSpinSettings Position="SpinPosition.Center"></ProgressButtonSpinSettings>
                    </SfProgressButton>
                    break;
                case 4:
                    <h3>Woohoo! you&#39re almost done</h3>
                    <MentorProfileDisplay />
                    <SfProgressButton Content="Complete Setup" CssClass="mc-btn mc-btn-black" @onclick="OnCompleteSetupClick">
                        <ProgressButtonAnimationSettings Effect="Syncfusion.Blazor.SplitButtons.AnimationEffect.ZoomIn"></ProgressButtonAnimationSettings>
                        <ProgressButtonSpinSettings Position="SpinPosition.Center"></ProgressButtonSpinSettings>
                    </SfProgressButton>
                    break;
            }

            <br />
        </div>
        
    </NotAuthorized>
</AuthorizeView>

<style>
    .mc-breadcrumb {
        display: flex;
        flex-direction: column;
        margin: auto;
        width: 360px
    }

    .mc-breadcrumb-labels {
        display: flex;
        flex-direction: row;
        margin: auto;
    }

    .mc-breadcrumb-labels > label {
        width: 90px;
        text-align: center;
        font-family: 'Roboto';
        font-weight: bold;
    }

    .mc-breadcrumb-icons {
        display: flex;
        flex-direction: row;
        margin: auto;
        height: 40px;
    }

    .mc-breadcrumb-btn {
        border-radius: 50%;
        width: 40px;
        height: 40px;
        vertical-align: middle;
        font-family: 'Roboto' !important;
        font-size: 18px;
    }

    .active, .active-btn, .active:focus, .active-btn:focus{
        background-color:  @Constants.McRed;
        border-color: @Constants.McRed;
    }

    .active-btn:hover {
        background-color:  @Constants.McDarkRed;
        border-color: @Constants.McDarkRed;
    }

    .inactive{
        background-color: @Constants.McGray;
        border-color: @Constants.McGray;
    }

    .active-label{
        color:  @Constants.McRed;
    }

    .inactive-label{
        color: @Constants.McGray;
    }

    .connector {
        width: 40px;
        height: 4px;
        border-radius: 4px;
        margin-top: 18px;
        margin: 5px;
    }

    label{
        margin: auto;
    }

    .bottom-btn, mc-btn{
        margin:auto;
        margin-top: 30px;
    }

    .entry-form{
        margin: auto;
        margin-top: 30px;
    }
</style>

@code {
    private Dictionary<int, string> cBreadcrumbs = new()
    {
        { 1, "Profile" },
        { 2, "Offering" },
        { 3, "Uploads" },
        { 4, "Submit" }
    };

    private int currentForm = 1;

    private void GoToNextForm()
    {
        currentForm++;
        StateHasChanged();
    }

    private void OnCompleteSetupClick()
    {
        Navigation.NavigateTo("/mentor/complete");
    }

    private void OnCrumbClick(int crumbNumber)
    {
        currentForm = crumbNumber;
    }
}
